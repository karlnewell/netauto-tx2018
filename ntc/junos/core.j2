{% set node = nodes[inventory_hostname] %}

{#
**************************************************
###         System configuration            ######
**************************************************
    #}
version {{ansible_net_version}}
groups {
    global {
        system {
            login {
                user ntc {
                    uid 2000;
                    class super-user;
                    authentication {
                        encrypted-password "$5$9dE0bRr9$.VvWkJKa3J7HW95.G3KxW9x01nUoVi0PnXuZBlpOUH9"; ## SECRET-DATA
                    }
                }
            }
        }
    }
}
apply-groups global;
system {
    host-name {{inventory_hostname}};
    no-redirects;
    root-authentication {
        encrypted-password "$5$1FR588oW$dWnmaj9S4t/GHEYL/gn8tOz3.yXoIMYHrCDyn.4hIo0"; ## SECRET-DATA
    }
    login {
        class super-user-local {
            idle-timeout 3600;
            permissions all;
        }
        user ntc {
            class super-user-local;
        }
    }
    services {
        ssh;
        netconf {
            ssh;
            traceoptions {
                file nc.txt size 1m world-readable;
                flag all;
            }
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any any;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
}

{#
**************************************************
###         Interfaces configuration        ######
**************************************************
    #}
interfaces {
{% for intf,intf_attr in node.links.items()|sort %}
    {{ intf.split('.')[0] }} {
        description "{{intf_attr.remote}}"
{%      if intf_attr.vlan  is defined and intf_attr.vlan != 0 %}
        vlan-tagging;
        encapsulation flexible-ethernet-services;
        unit {{intf_attr.vlan}} {
            vlan-id {{intf_attr.vlan}};
            family inet {
                address {{intf_attr.ip}}/{{intf_attr.mask|default('24')}}
            }
{#          if intf_attr.mpls is defined #}
            family mpls;
{#          endif #}
        }
    }
{%      else %}
        unit 0 {
            family inet {
                address {{intf_attr.ip}}/{{intf_attr.mask|default('24')}}
            }
{%          if intf_attr.mpls is defined %}
            family mpls;
{%          endif %}
{%          if intf_attr.iso is defined %}
            family iso;
{%          endif %}
        }
    }
{%      endif %}   
{% endfor %}
    fxp0 {
        description "OOB to MGMT Network";
        unit 0 {
            family inet {
                address {{node.mgmt}}/20;
            }
        }
    }
    lo0 {
        unit 0 {
            family inet {
                address {{node.rid}}/32;
            }
{%          if node.iso is defined %}
            family iso {
                address {{node.iso}};
            }
{%          endif %}            
        }
    }
}
snmp {
    community public {
        authorization read-only;
    }
    community networktocode {
        authorization read-only;
    }
}
{#
**************************************************
###         Global Variables                ######
**************************************************
    #}
routing-options {
    router-id {{ node.rid }};
    autonomous-system {{ common.bgp_asn }};
    static {
        route 0.0.0.0/0 {
            next-hop 10.0.0.2;
            no-readvertise;
            preference 255;
        }
    }
}
protocols {
{#
**************************************************
###         BGP  Variables                  ######
**************************************************
#}
{% if node.bgp is defined %}
    bgp {
{%      if node.bgp.ibgp is defined %}
        group Core {
            type internal;
{%          if node.bgp.ibgp.rr is not defined  %}
            export __Ansible_Core_export;
{%          endif %}
            local-address {{ node.rid}};
{%          if node.bgp.ibgp.rr is defined and node.bgp.ibgp.rr == true %}
            cluster {{node.rid}};
{%          endif %}
{%          for af in node.bgp.ibgp.af %}
{%          if af == 'inet' %}
            family inet {               
                unicast;
            }
{%          endif %}
{%          if af == 'inet-vpn' %}
            family inet-vpn {
                unicast;
            }
{%          endif %}
{%          if af == 'evpn' %}
            family evpn {
                signaling;
            }
{%          endif %}
{%          endfor %}
{%          for peer in node.bgp.ibgp.peers %}
            neighbor {{ peer }};
{%          endfor %}
        }
{%      endif %}
    }
{% endif %}
{#
**************************************************
###         OSPF  Variables                  ######
**************************************************
#}
{% if node.ospf is defined %}
    ospf {
        area 0 {
{%          for intf, intf_attr in node.links.items()|sort %}
            interface {{ intf }} {
{%              if intf_attr.cost is defined %}
                metric {{intf_attr.cost }};
{%              endif %}
            }
{%          endfor %}
            interface lo0.0 {
                passive;
            }
        }
    }
{% endif %}
{#
**************************************************
###         ISIS Variables                  ######
**************************************************
#}
{% if node.iso is defined %}
    isis {
        no-ipv6-routing;
        source-packet-routing {
            node-segment {
                ipv4-index {{ node.sid }};
            }
        }
        level 1 disable;
{%      for intf, intf_attr in node.links.items()|sort %}
        interface {{ intf }} {
            point-to-point;
{#
{%          if intf_attr.cost is defined %}
            metric {{intf_attr.cost }};
{%          endif %}
#}
        }
{%      endfor %}
        interface lo0.0 {
            passive;
        }
    }
{% endif %}
{#
**************************************************
###         LDP  Variables                  ######
**************************************************
#}
{% if node.ldp is not defined  %}
    ldp {
{%      for intf, intf_attr in node.links.items()|sort %}
        interface {{intf}};
{%      endfor %}
        interface lo0.0;
    }
{% endif %}
{#
**************************************************
###         RSVP  Variables                  ######
**************************************************
    #}
{% if node.rsvp is defined %}
    rsvp {
{%      for intf, intf_attr in node.links.items()|sort %}
        interface {{intf}};
{%      endfor %}
    }
{% endif %}
{#
**************************************************
###         MPLS and LLDP  Variables        ######
**************************************************
#}
    mpls {
{%      for intf, intf_attr in node.links.items()|sort %}
        interface {{intf}};
{%      endfor %}
    }
    lldp {
{#}
{%      for intf, intf_attr in node.links.items()|sort %}
        interface {{intf.split('.')[0]}};
{%      endfor %}
#}
        interface all;
        interface fxp0 {
          disable;
        }
    }
}
{#
**************************************************
###         Default BGP Export policy        #####
**************************************************
#}
{% if node.bgp.ibgp.rr is not defined  %}
policy-options {
    policy-statement __Ansible_Core_export {
        term ebgp {
            from {
                protocol bgp;
                external;
            }
            then {
                next-hop self;
                accept;
            }
        }
    }
}
{%  endif %}
